# expect all these tests to pass

source $BATS_TEST_DIRNAME/../lib/expectations

setup() {
  cd $BATS_TMPDIR
}

teardown() {
  if [ -e $BATS_TMPDIR/foo ]; then
    rm -fR $BATS_TMPDIR/foo
  fi
}

@test 'equality for integers' {
   expect 0 to equal 0
   expect 0 not to equal 1
}

@test 'equality for strings' {
   expect 'Hello' to equal 'Hello'
   expect 'Hello' not to equal 'World'
}

@test 'matching' {
   expect 'Hello' to match 'Hello.*'
   expect 'Hello' to match 'H.*'
   expect 'Hello' not to match 'Helloworld.*'
}

@test 'file existence' {
  touch foo
  expect 'foo' to exist
  expect 'bar' not to exist
}

@test 'empty file' {
  touch foo
  expect 'foo' to be_empty
  echo 'bar' >> foo
  expect 'foo' not to be_empty
}

function be_liked {
  [[ `expr "$2" : "I like .* $1"` == ${#2} ]]
}

function foo {
  echo "I like $1 very much"
}

@test 'matcher API' {
  expect "$(foo 'bar')" to be_liked 'very much'
}

@test 'be_within' {
  expect 27.5 to be_within 0.5 of 27.9
  expect 27.9 to be_within 0.5 of 27.5
}

@test 'end_with' {
  expect 'this string' to end_with "string"
  expect 'this string' not to end_with "stringy"
}

@test 'contains_exactly'  {
  ARR1=(v1 v2 v3)
  expect ARR1[@] to contain_exactly ARR1[@]

  ARR2=(v3 v2 v1)
  expect ARR1[@] to contain_exactly ARR2[@]
  expect ARR2[@] to contain_exactly ARR1[@]

  ARR3=(v3 v2 v1 v3)
  expect ARR1[@] to contain_exactly ARR3[@]
  expect ARR3[@] to contain_exactly ARR1[@]
}
